#log-level: none
#json-logs: false

programs:
  helm:
    envVars:
      RUN_HELM: "{{ if isSet .kapp.vars "run_helm" }}{{ .kapp.vars.run_helm }}{{ else }}true{{ end }}"
      KUBECONFIG: "{{ .kube_config }}"
      NAMESPACE: "{{ .kapp.vars.namespace | default .kapp.id }}"
      RELEASE: "{{ .kapp.vars.release | default .kapp.id }}"
      KUBE_CONTEXT: "{{ .kube_context }}"

    args:
      targets:
        install:
          # Search for parameters dynamically. The `findFiles` function takes a list of
          # file name patterns and a starting directory to search from. It then recursively
          # searches for a single file matching the pattern. If one (and only one) is found,
          # it's returned in the result array. Patterns that don't match any files are
          # filtered out.
          #
          # The `.sugarkube.defaultVars` variable is a list populated at runtime containing (in
          # order of precedence: provider, account, profile, cluster, region.
          #
          # So this horrific looking value searches for a file called 'values.yaml' under the kapp
          # cache directory, then files called `values-<provider/account/profile/etc>.yaml`. It takes
          # all files that exists and prepends '-f' to them so they'll be passed as options to helm.
          #
          - name: helm-opts
            value: {{ listString "/values.yaml$" | findFiles .kapp.cacheRoot | uniq | join "-f " }} {{ mapPrintF "/values-%s.yaml$" .sugarkube.defaultVars | findFiles .kapp.cacheRoot | mapPrintF "-f %s" | uniq | join " " }}

  kubectl:
    envVars:
      KUBECONFIG: "{{ .kube_config }}"
      KUBE_CONTEXT: "{{ .kube_context }}"

  aws:
    envVars:
      REGION: "{{ .stack.region }}"

  terraform:
    envVars:
      REGION: "{{ .stack.region }}"
      RUN_TERRAFORM: "{{ if isSet .kapp.vars "run_terraform" }}{{ .kapp.vars.run_terraform }}{{ else }}true{{ end }}"
    args:
      targets:
        install:
        # search for terraform vars files under `terraform_<provider>`
        - name: tf-opts
          value: {{ listString (printf "terraform_%s/.*/defaults.tfvars" .stack.provider) | findFiles .kapp.cacheRoot | uniq | join "-var-file " }} {{ mapPrintF (printf "terraform_%s/.*/%%s.tfvars" .stack.provider) .sugarkube.defaultVars | findFiles .kapp.cacheRoot | mapPrintF "-var-file %s" | uniq | join " " }}
